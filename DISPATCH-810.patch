diff --git a/include/qpid/dispatch/router_core.h b/include/qpid/dispatch/router_core.h
index 0c47fae..59b11c0 100644
--- a/include/qpid/dispatch/router_core.h
+++ b/include/qpid/dispatch/router_core.h
@@ -140,6 +140,8 @@ typedef enum {
     QDR_ROLE_ON_DEMAND
 } qdr_connection_role_t;
 
+typedef void (*qdr_connection_bind_context_t) (qdr_connection_t *context, void* token);
+
 /**
  * qdr_connection_opened
  *
@@ -170,7 +172,9 @@ qdr_connection_t *qdr_connection_opened(qdr_core_t            *core,
                                         bool                   strip_annotations_out,
                                         int                    link_capacity,
                                         const char            *vhost,
-                                        qdr_connection_info_t *connection_info);
+                                        qdr_connection_info_t *connection_info,
+                                        qdr_connection_bind_context_t context_binder,
+                                        void* bind_token);
 
 /**
  * qdr_connection_closed
diff --git a/src/router_core/connections.c b/src/router_core/connections.c
index 65d8bc3..5638c3a 100644
--- a/src/router_core/connections.c
+++ b/src/router_core/connections.c
@@ -68,7 +68,9 @@ qdr_connection_t *qdr_connection_opened(qdr_core_t            *core,
                                         bool                   strip_annotations_out,
                                         int                    link_capacity,
                                         const char            *vhost,
-                                        qdr_connection_info_t *connection_info)
+                                        qdr_connection_info_t *connection_info,
+                                        qdr_connection_bind_context_t context_binder,
+                                        void                  *bind_token)
 {
     qdr_action_t     *action = qdr_action(qdr_connection_opened_CT, "connection_opened");
     qdr_connection_t *conn   = new_qdr_connection_t();
@@ -97,6 +99,10 @@ qdr_connection_t *qdr_connection_opened(qdr_core_t            *core,
         strcat(conn->tenant_space, "/");
     }
 
+    if (context_binder) {
+        context_binder(conn, bind_token);
+    }
+
     action->args.connection.conn             = conn;
     action->args.connection.connection_label = qdr_field(label);
     action->args.connection.container_id     = qdr_field(remote_container_id);
diff --git a/src/router_node.c b/src/router_node.c
index 8c964e0..21d52bf 100644
--- a/src/router_node.c
+++ b/src/router_node.c
@@ -616,6 +616,12 @@ static int AMQP_link_detach_handler(void* context, qd_link_t *link, qd_detach_ty
     return 0;
 }
 
+static void bind_connection_context(qdr_connection_t *qdrc, void* token)
+{
+    qd_connection_t *conn = (qd_connection_t*) token;
+    qd_connection_set_context(conn, qdrc);
+    qdr_connection_set_context(qdrc, conn);
+}
 
 static void AMQP_opened_handler(qd_router_t *router, qd_connection_t *conn, bool inbound)
 {
@@ -733,19 +739,16 @@ static void AMQP_opened_handler(qd_router_t *router, qd_connection_t *conn, bool
                                                                  ssl_ssf,
                                                                  is_ssl);
 
-    qdr_connection_t *qdrc = qdr_connection_opened(router->router_core, inbound, role, cost, connection_id, name,
-                                                   pn_connection_remote_container(pn_conn),
-                                                   conn->strip_annotations_in,
-                                                   conn->strip_annotations_out,
-                                                   link_capacity,
-                                                   vhost,
-                                                   connection_info);
-
-    qd_connection_set_context(conn, qdrc);
-    qdr_connection_set_context(qdrc, conn);
+    qdr_connection_opened(router->router_core, inbound, role, cost, connection_id, name,
+                          pn_connection_remote_container(pn_conn),
+                          conn->strip_annotations_in,
+                          conn->strip_annotations_out,
+                          link_capacity,
+                          vhost,
+                          connection_info,
+                          bind_connection_context, conn);
 }
 
-
 static int AMQP_inbound_opened_handler(void *type_context, qd_connection_t *conn, void *context)
 {
     qd_router_t *router = (qd_router_t*) type_context;
